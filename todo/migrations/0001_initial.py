# Generated by Django 5.2.3 on 2025-06-18 21:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AboutPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tittle", models.CharField(max_length=50)),
                ("content", models.TextField()),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
            ],
            options={
                "verbose_name_plural": "About Page",
            },
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Categories",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tittle", models.CharField(max_length=50)),
                (
                    "images",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                ("content", models.TextField()),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="CategoryPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tittle", models.CharField(max_length=50)),
                ("content", models.TextField()),
            ],
            options={
                "verbose_name_plural": "Category Page",
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(max_length=50)),
                ("message", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="SiteSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "logo_navbar",
                    models.FileField(
                        blank=True, null=True, upload_to="todo/site_settings"
                    ),
                ),
                (
                    "logo_navbar_alt_data",
                    models.CharField(
                        blank=True,
                        help_text="Add data for increasing SEO performance",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "logo_footer",
                    models.FileField(
                        blank=True, null=True, upload_to="todo/site_settings"
                    ),
                ),
                (
                    "logo_footer_alt_data",
                    models.CharField(
                        blank=True,
                        help_text="Add data for increasing SEO performance",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "favicon",
                    models.FileField(
                        blank=True, null=True, upload_to="todo/site_settings"
                    ),
                ),
                (
                    "favicon_alt_data",
                    models.CharField(
                        blank=True,
                        help_text="Add data for increasing SEO performance",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=15, max_digits=17, null=True
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=15, max_digits=17, null=True
                    ),
                ),
                (
                    "iframe",
                    models.TextField(
                        blank=True,
                        help_text="Just paste iframe src data from googlemap",
                        null=True,
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Enter phone number starting with the code",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "fax",
                    models.CharField(
                        blank=True,
                        help_text="Enter fax number starting with the code",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "facebook",
                    models.URLField(
                        blank=True,
                        help_text="Enter your facebook url",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "instagram",
                    models.URLField(
                        blank=True,
                        help_text="Enter your instagram url",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "twitter",
                    models.URLField(
                        blank=True,
                        help_text="Enter your twitter url",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "linkedin",
                    models.URLField(
                        blank=True,
                        help_text="Enter your linkedin url",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "youtube",
                    models.URLField(
                        blank=True,
                        help_text="Enter your youtube url",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="Enter your website url",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Site Settings",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("price", models.FloatField(default=1)),
                ("currency", models.CharField(default="AZN", max_length=3)),
                ("note", models.TextField()),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="todo.author"
                    ),
                ),
                ("categories", models.ManyToManyField(to="todo.categories")),
            ],
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="book/")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="todo.product"
                    ),
                ),
            ],
        ),
    ]
